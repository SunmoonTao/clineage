# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-19 18:58
from __future__ import unicode_literals

from django.db import migrations, models
import primers.strand
import django


def split_cuts(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    IlluminaReadingAdaptor1Cuts = apps.get_model("parts", "IlluminaReadingAdaptor1Cuts")
    IlluminaReadingAdaptor2Cuts = apps.get_model("parts", "IlluminaReadingAdaptor2Cuts")
    IlluminaReadingAdaptor1ForTail = apps.get_model("parts", "IlluminaReadingAdaptor1ForTail")
    IlluminaReadingAdaptor2ForTail = apps.get_model("parts", "IlluminaReadingAdaptor2ForTail")
    IlluminaReadingAdaptor1ForHead = apps.get_model("parts", "IlluminaReadingAdaptor1ForHead")
    IlluminaReadingAdaptor2ForHead = apps.get_model("parts", "IlluminaReadingAdaptor2ForHead")
    for C, FT, FH in [
        (IlluminaReadingAdaptor1Cuts, IlluminaReadingAdaptor1ForTail, IlluminaReadingAdaptor1ForHead),
        (IlluminaReadingAdaptor2Cuts, IlluminaReadingAdaptor2ForTail, IlluminaReadingAdaptor2ForHead),
    ]:
        for c in C.objects.using(db_alias).select_related("ira"):
            FT.objects.using(db_alias).create(
                ira=c.ira,
                tail_length=len(c.ira._sequence)-c.overlap_start,
                id=c.id,
            )
            FH.objects.using(db_alias).create(
                ira=c.ira,
                head_length=c.overlap_end,
                id=c.id,
            )


def rejoin_cuts(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    IlluminaReadingAdaptor1Cuts = apps.get_model("parts", "IlluminaReadingAdaptor1Cuts")
    IlluminaReadingAdaptor2Cuts = apps.get_model("parts", "IlluminaReadingAdaptor2Cuts")
    IlluminaReadingAdaptor1ForTail = apps.get_model("parts", "IlluminaReadingAdaptor1ForTail")
    IlluminaReadingAdaptor2ForTail = apps.get_model("parts", "IlluminaReadingAdaptor2ForTail")
    IlluminaReadingAdaptor1ForHead = apps.get_model("parts", "IlluminaReadingAdaptor1ForHead")
    IlluminaReadingAdaptor2ForHead = apps.get_model("parts", "IlluminaReadingAdaptor2ForHead")
    for C, FT, FH in [
        (IlluminaReadingAdaptor1Cuts, IlluminaReadingAdaptor1ForTail, IlluminaReadingAdaptor1ForHead),
        (IlluminaReadingAdaptor2Cuts, IlluminaReadingAdaptor2ForTail, IlluminaReadingAdaptor2ForHead),
    ]:
        fts = {ft.id: ft for ft in FT.objects.using(db_alias).select_related("ira")}
        fhs = {fh.id: fh for fh in FH.objects.using(db_alias)}
        ft_ira_ids = {ft.ira_id: ft for ft in fts.values()}
        fh_ira_ids = {fh.ira_id: fh for fh in fhs.values()}
        joint = {k: (fts[k], fhs[k]) for k in fts.keys() & fhs.keys() if fts[k].ira_id == fhs[k].ira_id}
        rest = [(fts[k], fh_ira_ids[fts[k].ira_id]) for k in fts.keys() - joint.keys()] + \
            [(ft_ira_ids[fhs[k].ira_id], fhs[k]) for k in fhs.keys() - joint.keys()]
        for id, (ft, fh) in joint.items():
            ira = ft.ira
            C.objects.using(db_alias).create(
                ira=ira,
                overlap_start=len(ira._sequence)-ft.tail_length,
                overlap_end=fh.head_length,
                id=id,
            )
        for (ft, fh) in rest:
            ira = ft.ira
            C.objects.using(db_alias).create(
                ira=ira,
                overlap_start=len(ira._sequence)-ft.tail_length,
                overlap_end=fh.head_length,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('parts', '0002_remove_temp_fks'),
    ]

    operations = [
        migrations.CreateModel(
            name='Backbone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('_sequence', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IlluminaReadingAdaptor1ForHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_length', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.PlusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='IlluminaReadingAdaptor1ForTail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tail_length', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.PlusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='IlluminaReadingAdaptor2ForHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_length', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.MinusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='IlluminaReadingAdaptor2ForTail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tail_length', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.MinusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='PadlockAmplificationMinusPrimerPart1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('_sequence', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.MinusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='PadlockAmplificationMinusPrimerPart2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('_sequence', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.MinusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='PadlockAmplificationPlusPrimerPart1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('_sequence', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.PlusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.CreateModel(
            name='PadlockAmplificationPlusPrimerPart2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('_sequence', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, primers.strand.PlusStrandMixin, primers.strand.BaseStrandMixin),
        ),
        migrations.AddField(
            model_name='illuminareadingadaptor2fortail',
            name='ira',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.IlluminaReadingAdaptor2'),
        ),
        migrations.AddField(
            model_name='illuminareadingadaptor2forhead',
            name='ira',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.IlluminaReadingAdaptor2'),
        ),
        migrations.AddField(
            model_name='illuminareadingadaptor1fortail',
            name='ira',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.IlluminaReadingAdaptor1'),
        ),
        migrations.AddField(
            model_name='illuminareadingadaptor1forhead',
            name='ira',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.IlluminaReadingAdaptor1'),
        ),
        migrations.RunPython(
            code=split_cuts,
            reverse_code=rejoin_cuts,
        ),
        migrations.RemoveField(
            model_name='illuminareadingadaptor1cuts',
            name='ira',
        ),
        migrations.RemoveField(
            model_name='illuminareadingadaptor2cuts',
            name='ira',
        ),
    ]
