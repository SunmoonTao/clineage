# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-11-14 14:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('genomes', '0005_add_dnaslice_ordering'),
    ]

    operations = [
        migrations.CreateModel(
            name='RestrictionSiteDNASlice_Contains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictionSiteDNASlice_Overlaps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictionSiteDNASlice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_pos', models.IntegerField(db_index=True)),
                ('end_pos', models.IntegerField(db_index=True)),
                ('_sequence', models.CharField(default=None, max_length=300, null=True)),
                ('chromosome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genomes.Chromosome')),
                ('contains', models.ManyToManyField(related_name='contained', through='genomes.RestrictionSiteDNASlice_Contains', to='genomes.RestrictionSiteDNASlice')),
                ('overlaps', models.ManyToManyField(related_name='_restrictionsitednaslice_overlaps_+', through='genomes.RestrictionSiteDNASlice_Overlaps', to='genomes.RestrictionSiteDNASlice')),
            ],
            options={
                'ordering': ['chromosome', 'start_pos', 'end_pos'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='restrictionsitednaslice',
            unique_together=set([('chromosome', 'start_pos', 'end_pos')]),
        ),
        migrations.AlterIndexTogether(
            name='restrictionsitednaslice',
            index_together=set([('chromosome', 'start_pos', 'end_pos')]),
        ),
    ]
